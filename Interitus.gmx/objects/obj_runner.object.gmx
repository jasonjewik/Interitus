<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zombie_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_zombieMaster</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Intialize Variables

//Zombie Type 
/**
1 = Basic
2 = Runner
3 = Spitter
4 = Popper
5 = Juggernaut
**/

diceRoll = floor(random_range(0, 100.1));

type = 2;


//Physics
grav = 0.5;
h_speed = 0;
v_speed = 0;
jumpSpeed = 9;

//Combat Variables
chaseRange[1] = 720;
chaseRange[2] = 800;
e_state = e_state.chase;
attacked = false;
zombieCount += 1;

//Conditionals
    if (type = 1) {
        chaseRange[0] = 5;
        max_moveSpeed = random_range(0.6, 0.9);
        zHealth = 200;
        damage = 10;
    }
    if (type = 2) {
        chaseRange[0] = 5;
        max_moveSpeed = random_range(1.2, 1.5);
        zHealth = 300;
        damage = 10;
    }
    if (type = 3) {
        chaseRange[0] = 30;
        max_moveSpeed = random_range(0.6, 0.9);
        zHealth = 150;
        damage = 25;
    }
    if (type = 4) {
        chaseRange[0] = 5;
        max_moveSpeed = random_range(0.6, 0.9);
        zHealth = 400;
        damage = 50;
    }    
    if (type = 5) {
        chaseRange[0] = 25;
        max_moveSpeed = random_range(1.2, 1.5);
        zHealth = 1500;
        damage = 25;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy AI States

//**States**//
switch (e_state) {

    //Idle State
    case e_state.idle: {scr_eIdle(); break;};

    //Chase State
    case e_state.chase: {scr_eChase(); break;};
    
    //Path State
    case e_state.pathing: {scr_ePathing(); break;};
    
    //Path2 State
    case e_state.pathing2: {scr_ePathing2(); break;};
    
    //Damage State
    case e_state.damage: {scr_eDamage(); break;};
    
    //Spit State
    case e_state.spit: {scr_eSpit(); break;};
    
    //Attack State
    case e_state.attack: {scr_eAttack(); break;};

    //Dead State
    case e_state.dead: {scr_eDead(); break;};
    
    //Explosion State
    case e_state.explode: {scr_eExplode(); break;};
    
    default: break;
    
};

//You dead
if (zHealth &lt;= 0) {
    if (type = 4) {
        e_state = e_state.explode
    } else {
        e_state = e_state.dead;
    }
};

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation Handling
if (e_state = e_state.idle) {
    if (h_speed = 0) {
        image_speed = 0.05;
        if (type = 1) {
            sprite_index = spr_zombie_idle;
        }
        if (type = 2) {
            sprite_index = spr_zombie_idle;
        }
        if (type = 3) {
            sprite_index = it_zombie_idle;
        }
        if (type = 4) {
            sprite_index = plo_zombie_idle;
        }
        if (type = 5) {
            sprite_index = spr_tank_zombie_idle;
        }
        if (type = 6) {
            sprite_index = awl_zombie_idle;
        }
    }
    if (abs(h_speed) &gt; 0) {
        image_xscale = sign(h_speed);
        image_speed = 0.15 
        if (type = 1) {
            sprite_index = spr_zombie_walk;
        }
        if (type = 2) {
            sprite_index = spr_zombie_walk;
        }
        if (type = 3) {
            sprite_index = it_zombie_walk;
        }
        if (type = 4) {
            sprite_index = plo_zombie_walk;
        }
        if (type = 5) {
            sprite_index = spr_tank_zombie_idle; 
        }
        if (type = 6) {
            sprite_index = awl_zombie_idle;
        }
        
    }
};

if (e_state = e_state.chase || e_state = e_state.pathing || e_state.pathing2) {
        if (abs(h_speed) &gt; 0) {
        image_xscale = sign(h_speed);
        image_speed = 0.15 
        if (type = 1) {
            sprite_index = spr_zombie_walk;
        }
        if (type = 2) {
            sprite_index = spr_zombie_sprint;
        }
        if (type = 3) {
            sprite_index = it_zombie_walk;
        }
        if (type = 4) {
            sprite_index = plo_zombie_walk;
        }
        if (type = 5) {
            sprite_index = spr_tank_zombie_sprint; 
        }
        if (type = 6) {
            sprite_index = awl_zombie_crawl;
        }
        
    }
};

if (e_state = e_state.damage) {
    image_xscale = sign(obj_player.x - x);
    if (type = 1 || type = 2) {
        sprite_index = spr_zombie_dmg;
    }
    if (type = 3) {
        sprite_index = spr_it_zombie_dmg;
    }
    if (type = 4) {
        sprite_index = spr_plo_zombie_dmg;
    }
    if (type = 5) {
        sprite_index = spr_tank_zombie_dmg;
    }
    
}

if (e_state = e_state.attack) {
    image_speed = 0.20;
    if (type = 1) {
        sprite_index = spr_zombie_attack;
    }
    if (type = 2) {
        sprite_index = spr_zombie_attack;
    }
    if (type = 3) {
        sprite_index = it_zombie_attack;
    }
    if (type = 4) {
        sprite_index = spr_explo_zombie_attack;
    }
    if (type = 5) {
        sprite_index = spr_tank_zombie_attack;
    }
}

if (e_state = e_state.dead) {
    image_xscale = sign(obj_player.x - x);
    if (type = 1) {
        sprite_index = spr_zombie_die;
        image_speed = 0.20;
    }
    if (type = 2) {
        sprite_index = spr_zombie_die;
        image_speed = 0.20;
    }
    if (type = 3) {
        sprite_index = it_zombie_die;
        image_speed = 0.20;
    }
    if (type = 5) {
        sprite_index = spr_tank_zombie_die;
        image_speed = 0.20;
    }
};

if (e_state = e_state.explode) {
    sprite_index = plo_zombie_die;
    image_speed = 0.20;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (e_state = e_state.explode) {
    if (place_meeting(x, y, obj_zombieMaster)) {
        zHealth-=0.5;
    } 
    if (place_meeting(x, y, obj_player)) {
        global.playerHealth-= 0.5;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (e_state = e_state.attack) {
        if (image_xscale &lt; 0) {
            instance_create(x - 20, y, obj_zAttack);
        };
        if (image_xscale &gt; 0) {
            instance_create(x - 10, y, obj_zAttack);
        };
    if (!place_meeting(x, y, obj_melee_attack)) {
        e_state = e_state.chase;
    };
    else {
        e_state = e_state.damage;
    };
};

if (e_state = e_state.damage) {
    e_state = e_state.chase;
};

if (sprite_index = plo_zombie_die) {
    instance_create(x, y, obj_plo_dead);
    instance_destroy();
};

if (e_state = e_state.dead) {
    instance_create(x, y, obj_zombie_dead);
    instance_destroy();
};

if (e_state = e_state.spit) {
    instance_create(x, y, obj_spit);    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debugging
draw_self();

draw_set_font(fnt_text);
draw_set_color(c_white);

/*
if (e_state = e_state.idle) {
    draw_text(x, y, "I'm Idle.");    
}
else if (e_state = e_state.chase) {
    draw_text(x, y, "I'm Chasing.");
}
else if (e_state = e_state.pathing) {
    draw_text(x, y, "I'm Pathing.");
}
else if (e_state = e_state.pathing2) {
    draw_text(x, y, "Pathing2");
};
else if (e_state = e_state.attack) {
    draw_text(x, y, "I'm Attacking.");
};
else if (e_state = e_state.damage) {
    draw_text(x, y, "Ouch.");
};
else if (e_state = e_state.dead) {
    draw_text(x, y, "Dying...");
};


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
