<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_life</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> ///Initialize Variables
itemAdd = false
time -= 3;
metalGain = false
weaponGain = false
foodGain = false
healthGain = false
ammoGain = false
metalReturn = 0
ammoReturn = 0
weapon = ""
foodReturn = ""

//Item Roll Chances
gain = irandom_range(0, 100)
weaponReturn = irandom_range(0, 100)

//Determines whether you get...(see step event for actual values)
if (place_meeting(x, y, obj_agri)) {
    if (gain &gt; 25) {
        foodGain = true
    } else if (gain &gt; 10) {
          ammoGain = true
    } else if (gain &gt; 10) {
        metalGain = true
    } else if (gain &gt; 5) {
        healthGain = true
    } else if (gain &gt; 0) {
        weaponGain = true
    }
} else if (place_meeting(x, y, obj_med)) {
    if (gain &gt; 30) {
        healthGain = true
    } else if (gain &gt; 25) {
        foodGain = true
    } else if (gain &gt; 20) {
        weaponGain = true
    } else if (gain &gt; 15) {
        metalGain = true
    } else if (gain &gt; 0) {
        ammoGain = true
    }
} else if (place_meeting(x, y, obj_exp)) {
    if (gain &gt; 30) {
        weaponGain = true 
    } else if (gain &gt; 25) {
        metalGain = true
    } else if (gain &gt; 10) {
        ammoGain = true
    } else if (gain &gt; 20) {
        healthGain = true
    } else if (gain &gt; 0) {
        foodGain = true
    }
} else if (place_meeting(x, y, obj_res)) {
    if (gain &gt; 25) {
        metalGain = true
    } else if (gain &gt; 22) {
        ammoGain = true
    } else if (gain &gt; 20) {
        foodGain = true
    } else if (gain &gt; 10) {
        weaponGain = true
    } else if (gain &gt; 0) {
        healthGain = true
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, obj_cleared);
scr_save();
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (itemAdd = false) {

    //The values in irandom determine the min/max of what you can get
    if (metalGain) {
        metalReturn = irandom_range(100, 300) 
        global.metal += metalReturn
        alarm[0] = 50;
        itemAdd = true 
    } else if (weaponGain) { 
        if (weaponReturn &gt; 70) weapon = items[3, 0];
        else if (weaponReturn &gt; 60) weapon = items[1, 0];
        else if (weaponReturn &gt; 45) weapon = items[7, 0];
        else if (weaponReturn &gt; 35) weapon = items[9, 0];
        else if (weaponReturn &gt; 30) weapon = items[8, 0];
        else if (weaponReturn &gt; 25) weapon = items[4, 0];
        else if (weaponReturn &gt; 15) weapon = items[2, 0];
        else if (weaponReturn &gt; 5) weapon = items[6, 0];
        else if (weaponReturn &gt; 0) weapon = items[5, 0];      
        scr_itemPickup2(weapon) 
        i = maxInvSlots
        alarm[0] = 50;
        itemAdd = true 
    } else if (foodGain) {
        scr_itemPickup2(items[11, 0])
        alarm[0] = 50;
        itemAdd = true
    } else if (healthGain) {
        scr_itemPickup2(items[10, 0])
        alarm[0] = 50;
        itemAdd = true
    } else if (ammoGain) {
        ammoReturn = irandom_range(15, 50) 
        global.ammo += ammoReturn
        alarm[0] = 50;
        itemAdd = true 
    }
}    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_text);
draw_set_color(c_white);

if (metalGain) draw_text(x - 10, y, "Found#" + string(metalReturn) + " metal");
else if (weaponGain) draw_text(x - 10, y, "Found#" + string(weapon));
else if (foodGain) draw_text(x - 10, y, "Found#" + string(foodReturn) + "food");
else if (healthGain) draw_text(x - 10, y, "Found#Med-pack");
else if (ammoGain) draw_text(x - 10, y, "Found#" + string(ammoReturn) + " ammo");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
