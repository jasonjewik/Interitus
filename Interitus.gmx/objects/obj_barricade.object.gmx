<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_barricade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>barricadeUp = true;
repair = false
barricadeHealth = 1;
maxBarricadeHealth = 5000;
saveLoad = false
within = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!saveLoad) {
    ini_open("playerData.ini") 

if (ini_section_exists("Barricades")) {
    if (ini_key_exists("Barricades", string(id))) {
        barricadeHealth = ini_read_real("Barricades", string(id), 1)
    }
}

ini_close();

if (barricadeHealth &lt;= 0) {
    instance_create(x, y, obj_barricadeBroke)
    instance_destroy();
}
saveLoad = true
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

if (background_index[0] = bg_baseDay) {
    image_index = 0;
} else {
    image_index = 1;
}

if (barricadeHealth &lt;= 0) {
    barricadeUp = false;
} else {
    barricadeUp = true;
}

if (barricadeUp = false) {
    instance_create(x, y, obj_barricadeBroke);
    instance_destroy();
    ini_open("playerData.ini")

    ini_write_real("Barricades", string(id), barricadeHealth) 

    ini_close();
}

if (place_meeting(x, y, obj_player) &amp;&amp; barricadeHealth &lt; maxBarricadeHealth) {
    if (keyboard_check(vk_enter) &amp;&amp; global.metal &gt; 0) {
        global.metal--;
        barricadeHealth++;
        ini_open("playerData.ini")

        ini_write_real("Barricades", string(id), barricadeHealth) 
        ini_write_real("Player", "metal", global.metal);
        
        
        ini_close();
    }  
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x, y, obj_player)) {
    within = true
} else within = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

draw_set_color(c_white)
draw_set_font(fnt_text)
draw_set_valign(fa_center)
draw_set_halign(fa_center)

if (place_meeting(x, y, obj_player) &amp;&amp; barricadeHealth &lt; maxBarricadeHealth &amp;&amp; global.metal &gt; 0) {
    draw_text(x, y - 16, "Hold enter#to repair.")  
} else if (place_meeting(x, y, obj_player) &amp;&amp; barricadeHealth &lt; maxBarricadeHealth &amp;&amp; global.metal = 0) {
    draw_text(x, y - 16, "Out of#metal!")
}

draw_text(x, y - 32, barricadeHealth);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
