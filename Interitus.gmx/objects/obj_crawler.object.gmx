<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>awl_zombie_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_zombieMaster</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.5;
h_speed = 0;
v_speed = 0;
zHealth = 150;
damage = 20;
max_moveSpeed = 0.2;
attacked = false;
e_state = e_state.reanimate;
type = 6;
dead = true;
remaining++

chaseRange[0] = 3;
chaseRange[1] = 720;
chaseRange[2] = 800;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Barricade Collision
if (place_meeting(x + h_speed, y, obj_barricade))
{
    while(!place_meeting(x + sign(h_speed), y, obj_barricade))
    {
        x += sign(h_speed);
    }
    h_speed = 0;
}
if (place_meeting(x, y + v_speed, obj_barricade))
{
    while(!place_meeting(x, y + sign(v_speed), obj_barricade))
    {
        y += sign(v_speed);
    }
    v_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crawl for yer lives
//Movement
switch (e_state) {
    
    //Reanimate
    case e_state.reanimate: {scr_eReanimate(); break;};
    
    //Chase 
    case e_state.chase: {scr_eChase(); break;};
    
    //Attack
    case e_state.attack: {scr_eAttack(); break;};
    
    //Die 
    case e_state.dead: {scr_eDead(); break;}; 
    
    //Damage
    case e_state.damage: {scr_eDamage(); break;};
}

scr_physics();

//Die
if (zHealth &lt;= 0) {
    e_state = e_state.dead;
}

if (e_state = e_state.dead) {
    instance_create(x, y, obj_crawler_dead);
    instance_destroy();
}

if (!night) instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation Handling

if (e_state = e_state.reanimate) {
    image_speed = 0.50;
    sprite_index = awl_zombie_revive;
};
if (e_state = e_state.chase) {
    image_xscale = sign(obj_player.x - x);
    image_speed = 0.10;
    sprite_index = awl_zombie_crawl;
};
if (e_state = e_state.attack) {
    image_xscale = sign(obj_player.x - x);
    image_speed = 0.10;
    sprite_index = spr_crawl_zombie_attack;
}
if (e_state = e_state.damage) {
    image_speed = 0.2;
    sprite_index = spr_zombie_crawl_dmg;
}
if (sprite_index = awl_zombie_die) {
    image_speed = 0.20;
    sprite_index = awl_zombie_dead;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index = awl_zombie_revive) {
    e_state = e_state.chase;
}

if (sprite_index = spr_crawl_zombie_attack) {
    if (image_xscale &lt; 0) {
            instance_create(x - 20, y, obj_zAttack);
        };
        if (image_xscale &gt; 0) {
            instance_create(x + 10, y, obj_zAttack);
        };
    if (!place_meeting(x, y, obj_melee_attack)) {
        e_state = e_state.chase;
    };
    else {
        e_state = e_state.damage;
    };
}

if (sprite_index = spr_zombie_crawl_dmg) {
    e_state = e_state.chase
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

/*
draw_set_font(fnt_text);
draw_set_color(c_white);

draw_text(x, y - 30, zHealth);


if (e_state = e_state.reanimate) {
    draw_text(x, y - 30, "Reanimate");
};
if (e_state = e_state.chase) {
    draw_text(x, y - 30, "Chase");
};
if (e_state = e_state.attack) {
    draw_text(x, y - 30, "Attack");
};
if (e_state = e_state.dead) {
    draw_text(x, y - 30, "Dying");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
