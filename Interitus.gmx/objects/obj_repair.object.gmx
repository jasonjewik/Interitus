<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_repair</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = 0
maxRepair = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0

for (var i = 1; i &lt; array_height_2d(global.items); i++) {
    with (obj_newInventory) {
        if (global.inventory[ipos2, 0] = global.items[i, 0]) {
            maxRepair = global.items[i, 4]
        }
    }
}


scr_getInput();

with (obj_newInventory) {
    if (global.inventory[ipos2, 0] != "") {
        obj_repair.type = scr_itemType()
        if (obj_repair.type = 1 || obj_repair.type = 2) {
            if ((global.inventory[ipos2, 1] + 50) &lt; maxRepair &amp;&amp; global.metal &gt; 0) {
                obj_repair.image_index = 0;
            } else {
                obj_repair.image_index = 1;
            }
        } else {
            obj_repair.image_index = 1;
        }
    } else {
        obj_repair.image_index = 1;
    }
}

if (image_index = 0) {
if (abs(mouse_x - x) &lt; 20 &amp;&amp; abs(mouse_y - y) &lt; 10) { 
    if (mouse_left) {
        with (obj_newInventory) { 
            global.inventory[ipos2, 1] += 50
        }
        global.metal -= 50;
        ini_open("playerData.ini") 
        ini_write_real("Player", "metal", global.metal);
        ini_close();
        scr_invRefresh();
        scr_invSave();
    }
}
}

if (!showInv || obj_newInventory.mainInventory = false) {
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
